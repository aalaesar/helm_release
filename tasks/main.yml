---
# tasks file for helm_release
# verify parameters
- include:  check_parameters.yml
# gather release list
- name: gather the list of managed releases
  command: helm list -a --output json
  changed_when: false
  register: cmd_helm_releases
- name: looks for the named release
  set_fact:
    cmd_releases_status: "{{(cmd_helm_releases.stdout | from_json)| json_query(json_query_request)| lower}}"
  vars:
    json_query_request: "Releases[?Name == '{{hr_name}}'].Status"

- block:
  - include: manage_helm_repos.yml
    when: 
      - hr_chart.source.type == "repo"

  - include: get_chart_version.yml
  # create the release
  - include: create_release.yml
    when: 
      - ('deployed' not in cmd_releases_status)
  # check/update the release
  - include: update_release.yml
    when:
      - ('deployed' in cmd_releases_status)
  when:
    - hr_state in ['present', 'upgraded']



  # remove/purge the release
- block:
    - debug:
        msg: "trouvé !, à enlever"
    - include: remove_release.yml
  when:
    - hr_state in ['absent', 'purged']
    - ('deployed' in cmd_releases_status)

  # nothing to do
- name: nothing left to do
  debug:
    msg: "Release {{hr_name}} not found. Nothing to do."
  when:
    - hr_state in ['absent', 'purged']
    - ('deployed' not in cmd_releases_status)