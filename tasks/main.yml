---
# tasks file for helm_release
# verify parameters
- include: check_parameters.yml

# check helm and helm version
- include: check_helm.yml
# gather release list
- name: gather the list of managed releases
  command: "{{ hr_helm_binary|d('helm') }} list -A --output json {{ hr_global_flags| join(' ')}}"
  check_mode: no
  changed_when: false
  register: cmd_helm_releases
- name: looks for the named release
  set_fact:
    cmd_releases_status: "{{cmd_helm_releases.stdout| from_json | json_query(json_query_request)| lower}}"
  vars:
    json_query_request: "[?name == '{{hr_name}}'].status"
- block:
  # add /pass the helm repo configuration
  - include: manage_helm_repos.yml
    when: 
      - hr_chart.source.type|d(false) == "repo"

  - include: get_chart_version.yml
  # create the release
  - fail:
      msg: "An older Helm release with the name '{{hr_name}}' has been found. You may need to purge this release before installing it"
    when:
      - ('deleted'  in cmd_releases_status)
  - include: create_release.yml
    when: 
      - ('deployed' not in cmd_releases_status)
      - ('failed' not in cmd_releases_status)

  # check/update the release
  - include: update_release.yml
    when:
      - ('deployed' in cmd_releases_status) or ('failed' in cmd_releases_status)
  when:
    - hr_state in ['present', 'upgraded']

  # remove/purge the release
- include: remove_release.yml
  when:
    - hr_state in ['absent', 'purged']
    - ('deployed' in cmd_releases_status)

  # nothing to do
- name: nothing left to do
  debug:
    msg: "Helm release '{{hr_name}}' not found. Nothing to do."
  when:
    - hr_state in ['absent', 'purged']
    - ('deployed' not in cmd_releases_status)