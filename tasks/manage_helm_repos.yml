---
- name: list installed charts repositories
  command: "helm repo list --output json {{ hr_global_flags | join(' ') }}"
  check_mode : no
  changed_when: false
  register: cmd_repo_list

- name: looks for the chart's repository
  set_fact:
    # the repo's name should be uniq, json_query return a list
    cmd_repo_status: "{{ (cmd_repo_list.stdout | from_json) | json_query(json_query_request)}}"
  vars:
    json_query_request: "[?Name == '{{hr_chart.source.name}}']"
  
- name: the repo's URL is correct
  assert:
    that:
      - (cmd_repo_status | first).URL == hr_chart.source.location
    fail_msg: "The URL of repo {{hr_chart.source.name}} is not {{hr_chart.source.location}}!"
  when:
    - not hr_chart.source.update_url|d(hr_reuse_values)
    - cmd_repo_status|length > 0

- block:
  - name: add/update the helm repository
    command: "helm repo add {{hr_chart.source.name}} {{hr_chart.source.location}} {{ hr_global_flags | join(' ') }}"
  - name: update Helm's Cache
    command: "helm repo update {{ hr_global_flags | join(' ') }}"
  when: >
    (cmd_repo_status|length == 0) or
    ((cmd_repo_status[0].URL != hr_chart.source.location) and
    (hr_chart.source.update_url|d(hr_reuse_values)))
